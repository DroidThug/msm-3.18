From 7bdbc60b1a270e9babdc8db4b550b6c465a27457 Mon Sep 17 00:00:00 2001
From: lnxbuild <lnxbuild@localhost>
Date: Wed, 4 Sep 2013 09:51:34 +0800
Subject: [PATCH 13/13] add front camera s5k4e1 driver

Change-Id: I6195812283e0d223ab9e5b88f6e3ce19ac64a348
---
 arch/arm/boot/dts/msm8610-qrd-camera-sensor.dtsi   |   34 ++++
 arch/arm/configs/msm8610_defconfig                 |    1 +
 arch/arm/mach-msm/clock-8610.c                     |    2 +
 drivers/media/platform/msm/camera_v2/Kconfig       |    8 +
 .../media/platform/msm/camera_v2/sensor/Makefile   |    1 +
 .../msm/camera_v2/sensor/s5k4e1_sunny_p5s07a.c     |  185 ++++++++++++++++++++
 6 files changed, 231 insertions(+), 0 deletions(-)
 create mode 100644 drivers/media/platform/msm/camera_v2/sensor/s5k4e1_sunny_p5s07a.c

diff --git a/arch/arm/boot/dts/msm8610-qrd-camera-sensor.dtsi b/arch/arm/boot/dts/msm8610-qrd-camera-sensor.dtsi
index f7a475af..94c2ef8 100644
--- a/arch/arm/boot/dts/msm8610-qrd-camera-sensor.dtsi
+++ b/arch/arm/boot/dts/msm8610-qrd-camera-sensor.dtsi
@@ -264,6 +264,40 @@
 				qcom,sensor-mode = <0>;
 				qcom,cci-master = <0>;
 			};
+			
+			qcom,camera@30 {
+		  compatible = "qcom,s5k4e1_sunny";
+		  reg = <0x30>;
+		  qcom,slave-id = <0x30 0x0000 0x4E10>;
+		  qcom,csiphy-sd-index = <1>;
+		  qcom,csid-sd-index = <1>;
+		  qcom,mount-angle = <90>;
+		  qcom,sensor-name = "s5k4e1_sunny";
+		  cam_vdig-supply = <&pm8110_l2>;
+		  cam_vio-supply = <&pm8110_l7>;
+		  cam_vana-supply = <&pm8110_l22>;
+		  qcom,cam-vreg-name = "cam_vdig", "cam_vio", "cam_vana";
+		  qcom,cam-vreg-type = <0 0 0>;
+		  qcom,cam-vreg-min-voltage = <1200000 1800000 2850000>;
+		  qcom,cam-vreg-max-voltage = <1200000 1800000 2850000>;
+		  qcom,cam-vreg-op-mode = <200000 200000 100000>;
+		  qcom,gpio-no-mux = <0>;
+		  gpios = <&msmgpio 13 0>,
+		  	<&msmgpio 15 0>,
+		  	<&msmgpio 85 0>;
+		  qcom,gpio-reset = <1>;
+		  qcom,gpio-standby = <2>;
+		  qcom,gpio-req-tbl-num = <0 1 2>;
+		  qcom,gpio-req-tbl-flags = <1 0 0>;
+		  qcom,gpio-req-tbl-label = "CAMIF_MCLK",
+		  			  "CAM_RESET",
+		  			  "CAM_STANDBY";
+		  qcom,csi-lane-assign = <0xe4>;
+		  qcom,csi-lane-mask = <0x3>;
+		  qcom,sensor-position = <1>;
+		  qcom,sensor-mode = <1>;
+		  qcom,cci-master = <0>;
+	};	
 	
 
   qcom,camera@7a {
diff --git a/arch/arm/configs/msm8610_defconfig b/arch/arm/configs/msm8610_defconfig
index d92b9e1..f6ea585 100644
--- a/arch/arm/configs/msm8610_defconfig
+++ b/arch/arm/configs/msm8610_defconfig
@@ -312,6 +312,7 @@ CONFIG_OV5648_SUNNY_P5V18G=y
 CONFIG_S5K4H5_LITEON_12P1BA855D=y
 CONFIG_S5K4E1_LITEON_13P1BA535D=y
 CONFIG_MT9V113_SUNNY_P0M01K=y
+CONFIG_S5K4E1_SUNNY_P5S07A=y
 CONFIG_MSM_CAMERA_SENSOR=y
 CONFIG_MSM_CCI=y
 CONFIG_MSM_CSIPHY=y
diff --git a/arch/arm/mach-msm/clock-8610.c b/arch/arm/mach-msm/clock-8610.c
index 378d18e..2f42cdb 100644
--- a/arch/arm/mach-msm/clock-8610.c
+++ b/arch/arm/mach-msm/clock-8610.c
@@ -3018,6 +3018,7 @@ static struct clk_lookup msm_clocks_8610[] = {
 	CLK_LOOKUP("cam_src_clk", mclk0_clk_src.c, "6-0020"),
 	CLK_LOOKUP("cam_src_clk", mclk0_clk_src.c, "6-006c"),
 	CLK_LOOKUP("cam_src_clk", mclk0_clk_src.c, "6-0022"),	
+	CLK_LOOKUP("cam_src_clk", mclk0_clk_src.c, "6-0030"),	
 	CLK_LOOKUP("cam_src_clk", mclk0_clk_src.c, "6-0068"),	
 	CLK_LOOKUP("cam_src_clk", mclk0_clk_src.c, "6-006a"),		
 	CLK_LOOKUP("cam_src_clk", mclk0_clk_src.c, "6-007a"),
@@ -3028,6 +3029,7 @@ static struct clk_lookup msm_clocks_8610[] = {
 	CLK_LOOKUP("cam_clk", mclk0_clk.c, "6-0020"),
 	CLK_LOOKUP("cam_clk", mclk0_clk.c, "6-006c"),
   CLK_LOOKUP("cam_clk", mclk0_clk.c, "6-0022"),	
+	CLK_LOOKUP("cam_clk", mclk0_clk.c, "6-0030"),		
 	CLK_LOOKUP("cam_clk", mclk0_clk.c, "6-0068"),  	
 	CLK_LOOKUP("cam_clk", mclk0_clk.c, "6-006a"),  	
 	CLK_LOOKUP("cam_clk", mclk0_clk.c, "6-007a"),
diff --git a/drivers/media/platform/msm/camera_v2/Kconfig b/drivers/media/platform/msm/camera_v2/Kconfig
index 9bd8c4d..6f85f37 100644
--- a/drivers/media/platform/msm/camera_v2/Kconfig
+++ b/drivers/media/platform/msm/camera_v2/Kconfig
@@ -182,6 +182,14 @@ config GC0339
 		Preview and snapshot resolution shall be 640*480 at 30 fps,
 		It does not support auto focus.
 
+config S5K4E1_SUNNY_P5S07A
+	bool "Sensor S5K4E1 (BAYER 5M)"
+	depends on MSMB_CAMERA
+	---help---
+		Samsung 5 MP Bayer Sensor, only use 1 mipi lane,
+		preview set to 1296*972 at 30 fps,
+		snapshot set to 2592*1944 at 15 fps,
+		This sensor driver does not support auto focus.		
 
 config MT9V113_SUNNY_P0M01K
 	bool "Sensor MT9V113 (BAYER .3M)"
diff --git a/drivers/media/platform/msm/camera_v2/sensor/Makefile b/drivers/media/platform/msm/camera_v2/sensor/Makefile
index f135688..96d463e 100644
--- a/drivers/media/platform/msm/camera_v2/sensor/Makefile
+++ b/drivers/media/platform/msm/camera_v2/sensor/Makefile
@@ -14,6 +14,7 @@ obj-$(CONFIG_OV8850_FOXCONN_DC0901B) += ov8850_foxconn_dc0901b.o
 obj-$(CONFIG_OV5648_SUNNY_P5V18G) += ov5648_sunny_p5v18g.o
 obj-$(CONFIG_S5K4H5_LITEON_12P1BA855D) += s5k4h5_liteon_12p1ba855d.o
 obj-$(CONFIG_S5K4E1_LITEON_13P1BA535D) += s5k4e1_liteon_13p1ba535d.o
+obj-$(CONFIG_S5K4E1_SUNNY_P5S07A) += s5k4e1_sunny_p5s07a.o
 obj-$(CONFIG_OV2720) += ov2720.o
 obj-$(CONFIG_OV9724) += ov9724.o
 obj-$(CONFIG_HI256) += hi256.o
diff --git a/drivers/media/platform/msm/camera_v2/sensor/s5k4e1_sunny_p5s07a.c b/drivers/media/platform/msm/camera_v2/sensor/s5k4e1_sunny_p5s07a.c
new file mode 100644
index 0000000..d197dfd
--- /dev/null
+++ b/drivers/media/platform/msm/camera_v2/sensor/s5k4e1_sunny_p5s07a.c
@@ -0,0 +1,185 @@
+/* Copyright (c) 2013, The Linux Foundation. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 and
+ * only version 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ */
+#include <mach/gpiomux.h>
+#include "msm_sensor.h"
+#include "msm_sd.h"
+#include "camera.h"
+#include "msm_cci.h"
+#include "msm_camera_io_util.h"
+#include "msm_camera_i2c_mux.h"
+#include <mach/rpm-regulator.h>
+#include <mach/rpm-regulator-smd.h>
+#include <linux/regulator/consumer.h>
+
+#define S5K4E1_SUNNY_SENSOR_NAME "s5k4e1_sunny"
+DEFINE_MSM_MUTEX(s5k4e1_sunny_mut);
+
+#undef CDBG
+#define S5K4E1_SUNNY_DEBUG
+#ifdef S5K4E1_SUNNY_DEBUG
+#define CDBG(fmt, args...) pr_err(fmt, ##args)
+#else
+#define CDBG(fmt, args...) do { } while (0)
+#endif
+
+
+static struct msm_sensor_ctrl_t s5k4e1_sunny_s_ctrl;
+
+
+static struct msm_sensor_power_setting s5k4e1_sunny_power_setting[] = {
+	{
+		.seq_type = SENSOR_VREG,
+		.seq_val = CAM_VANA,
+		.config_val = 0,
+		.delay = 5,
+	},	
+	{
+		.seq_type = SENSOR_VREG,
+		.seq_val = CAM_VIO,
+		.config_val = 0,
+		.delay = 5,
+	},
+        /*
+	{
+		.seq_type = SENSOR_GPIO,
+		.seq_val = SENSOR_GPIO_STANDBY,
+		.config_val = GPIO_OUT_LOW,
+		.delay = 15,
+	},
+        */
+	{
+		.seq_type = SENSOR_GPIO,
+		.seq_val = SENSOR_GPIO_RESET,
+		.config_val = GPIO_OUT_LOW,
+		.delay = 40,
+	},
+        /*
+	{
+		.seq_type = SENSOR_GPIO,
+		.seq_val = SENSOR_GPIO_STANDBY,
+		.config_val = GPIO_OUT_HIGH,
+		.delay = 40,
+	},
+        */
+	{
+		.seq_type = SENSOR_GPIO,
+		.seq_val = SENSOR_GPIO_RESET,
+		.config_val = GPIO_OUT_HIGH,
+		.delay = 40,
+	},
+	{
+		.seq_type = SENSOR_CLK,
+		.seq_val = SENSOR_CAM_MCLK,
+		.config_val = 24000000,
+		.delay = 5,
+	},
+	{
+		.seq_type = SENSOR_I2C_MUX,
+		.seq_val = 0,
+		.config_val = 0,
+		.delay = 0,
+	},
+};
+
+static struct v4l2_subdev_info s5k4e1_sunny_subdev_info[] = {
+	{
+		.code   = V4L2_MBUS_FMT_SGRBG10_1X10,
+		.colorspace = V4L2_COLORSPACE_JPEG,
+		.fmt    = 1,
+		.order    = 0,
+	},
+};
+
+static const struct i2c_device_id s5k4e1_sunny_i2c_id[] = {
+	{S5K4E1_SUNNY_SENSOR_NAME, (kernel_ulong_t)&s5k4e1_sunny_s_ctrl},
+	{ }
+};
+
+static int32_t msm_s5k4e1_sunny_i2c_probe(struct i2c_client *client,
+	const struct i2c_device_id *id)
+{
+	return msm_sensor_i2c_probe(client, id, &s5k4e1_sunny_s_ctrl);
+}
+
+static struct i2c_driver s5k4e1_sunny_i2c_driver = {
+	.id_table = s5k4e1_sunny_i2c_id,
+	.probe  = msm_s5k4e1_sunny_i2c_probe,
+	.driver = {
+		.name = S5K4E1_SUNNY_SENSOR_NAME,
+	},
+};
+
+static struct msm_camera_i2c_client s5k4e1_sunny_sensor_i2c_client = {
+	.addr_type = MSM_CAMERA_I2C_WORD_ADDR,
+};
+
+static const struct of_device_id s5k4e1_sunny_dt_match[] = {
+	{.compatible = "qcom,s5k4e1_sunny", .data = &s5k4e1_sunny_s_ctrl},
+	{}
+};
+
+MODULE_DEVICE_TABLE(of, s5k4e1_sunny_dt_match);
+
+static struct platform_driver s5k4e1_sunny_platform_driver = {
+	.driver = {
+		.name = "qcom,s5k4e1_sunny",
+		.owner = THIS_MODULE,
+		.of_match_table = s5k4e1_sunny_dt_match,
+	},
+};
+
+static int32_t s5k4e1_sunny_platform_probe(struct platform_device *pdev)
+{
+	int32_t rc = 0;
+	const struct of_device_id *match;
+	match = of_match_device(s5k4e1_sunny_dt_match, &pdev->dev);
+	rc = msm_sensor_platform_probe(pdev, match->data);
+	return rc;
+}
+
+static int __init s5k4e1_sunny_init_module(void)
+{
+	int32_t rc = 0;
+	pr_info("%s:%d\n", __func__, __LINE__);
+	rc = platform_driver_probe(&s5k4e1_sunny_platform_driver,
+		s5k4e1_sunny_platform_probe);
+	if (!rc)
+		return rc;
+	pr_err("%s:%d rc %d\n", __func__, __LINE__, rc);
+	return i2c_add_driver(&s5k4e1_sunny_i2c_driver);
+}
+
+static void __exit s5k4e1_sunny_exit_module(void)
+{
+	pr_info("%s:%d\n", __func__, __LINE__);
+	if (s5k4e1_sunny_s_ctrl.pdev) {
+		msm_sensor_free_sensor_data(&s5k4e1_sunny_s_ctrl);
+		platform_driver_unregister(&s5k4e1_sunny_platform_driver);
+	} else
+		i2c_del_driver(&s5k4e1_sunny_i2c_driver);
+	return;
+}
+
+static struct msm_sensor_ctrl_t s5k4e1_sunny_s_ctrl = {
+	.sensor_i2c_client = &s5k4e1_sunny_sensor_i2c_client,
+	.power_setting_array.power_setting = s5k4e1_sunny_power_setting,
+	.power_setting_array.size = ARRAY_SIZE(s5k4e1_sunny_power_setting),
+	.msm_sensor_mutex = &s5k4e1_sunny_mut,
+	.sensor_v4l2_subdev_info = s5k4e1_sunny_subdev_info,
+	.sensor_v4l2_subdev_info_size = ARRAY_SIZE(s5k4e1_sunny_subdev_info),
+};
+
+module_init(s5k4e1_sunny_init_module);
+module_exit(s5k4e1_sunny_exit_module);
+MODULE_DESCRIPTION("s5k4e1_sunny");
+MODULE_LICENSE("GPL v2");
-- 
1.7.8.3

